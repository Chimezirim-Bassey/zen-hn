openapi: 3.0.3
info:
  title: zen_hn API
  version: 1.0.0
  description: API for zen_hn
paths:
  /api/dj-rest-auth/login/:
    post:
      operationId: dj_rest_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/dj-rest-auth/logout/:
    post:
      operationId: dj_rest_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - dj-rest-auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/password/change/:
    post:
      operationId: dj_rest_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/password/reset/:
    post:
      operationId: dj_rest_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/password/reset/confirm/:
    post:
      operationId: dj_rest_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/registration/:
    post:
      operationId: dj_rest_auth_registration_create
      description: |-
        Registers a new user.

        Accepts the following POST parameters: username, email, password1, password2.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/dj-rest-auth/registration/resend-email/:
    post:
      operationId: dj_rest_auth_registration_resend_email_create
      description: |-
        Resends another email to an unverified email.

        Accepts the following POST parameter: email.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/registration/verify-email/:
    post:
      operationId: dj_rest_auth_registration_verify_email_create
      description: |-
        Verifies the email associated with the provided key.

        Accepts the following POST parameter: key.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/user/:
    get:
      operationId: dj_rest_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - dj-rest-auth
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: dj_rest_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: dj_rest_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /api/job/job/:
    get:
      operationId: job_job_list
      tags:
      - job
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
          description: ''
    post:
      operationId: job_job_create
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/job/job/{item_id}/:
    get:
      operationId: job_job_retrieve
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this job.
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    put:
      operationId: job_job_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this job.
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    patch:
      operationId: job_job_partial_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this job.
        required: true
      tags:
      - job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJob'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: job_job_destroy
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this job.
        required: true
      tags:
      - job
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/:
    get:
      operationId: jobs_list
      tags:
      - jobs
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/{item_id}/:
    get:
      operationId: jobs_retrieve
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    put:
      operationId: jobs_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this job.
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    patch:
      operationId: jobs_partial_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this job.
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJob'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: jobs_destroy
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/polls/:
    get:
      operationId: polls_list
      tags:
      - polls
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Poll'
          description: ''
  /api/polls/{item_id}/:
    get:
      operationId: polls_retrieve
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this poll.
        required: true
      tags:
      - polls
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: ''
    put:
      operationId: polls_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this poll.
        required: true
      tags:
      - polls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Poll'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Poll'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Poll'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: ''
    patch:
      operationId: polls_partial_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this poll.
        required: true
      tags:
      - polls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPoll'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPoll'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPoll'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: ''
    delete:
      operationId: polls_destroy
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this poll.
        required: true
      tags:
      - polls
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/polls/poll/:
    get:
      operationId: polls_poll_list
      tags:
      - polls
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Poll'
          description: ''
    post:
      operationId: polls_poll_create
      tags:
      - polls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Poll'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Poll'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Poll'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: ''
  /api/polls/poll/{item_id}/:
    get:
      operationId: polls_poll_retrieve
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this poll.
        required: true
      tags:
      - polls
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: ''
    put:
      operationId: polls_poll_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this poll.
        required: true
      tags:
      - polls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Poll'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Poll'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Poll'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: ''
    patch:
      operationId: polls_poll_partial_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this poll.
        required: true
      tags:
      - polls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPoll'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPoll'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPoll'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
          description: ''
    delete:
      operationId: polls_poll_destroy
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this poll.
        required: true
      tags:
      - polls
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/stories/:
    get:
      operationId: stories_list
      tags:
      - stories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Story'
          description: ''
  /api/stories/{item_id}/:
    get:
      operationId: stories_retrieve
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this story.
        required: true
      tags:
      - stories
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
    put:
      operationId: stories_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this story.
        required: true
      tags:
      - stories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Story'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Story'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
    patch:
      operationId: stories_partial_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this story.
        required: true
      tags:
      - stories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStory'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
    delete:
      operationId: stories_destroy
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this story.
        required: true
      tags:
      - stories
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/stories/ask/:
    get:
      operationId: stories_ask_list
      tags:
      - stories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Story'
          description: ''
  /api/stories/show/:
    get:
      operationId: stories_show_list
      tags:
      - stories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Story'
          description: ''
  /api/stories/storysets/story/:
    get:
      operationId: stories_storysets_story_list
      tags:
      - stories
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Story'
          description: ''
    post:
      operationId: stories_storysets_story_create
      tags:
      - stories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Story'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Story'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
  /api/stories/storysets/story/{item_id}/:
    get:
      operationId: stories_storysets_story_retrieve
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this story.
        required: true
      tags:
      - stories
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
    put:
      operationId: stories_storysets_story_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this story.
        required: true
      tags:
      - stories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Story'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Story'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
    patch:
      operationId: stories_storysets_story_partial_update
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this story.
        required: true
      tags:
      - stories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStory'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: ''
    delete:
      operationId: stories_storysets_story_destroy
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        description: A unique value identifying this story.
        required: true
      tags:
      - stories
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/{username}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/user/:
    get:
      operationId: users_user_list
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_user_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/user/{email}/:
    get:
      operationId: users_user_retrieve
      parameters:
      - in: path
        name: email
        schema:
          type: string
          format: email
        description: A unique value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_user_update
      parameters:
      - in: path
        name: email
        schema:
          type: string
          format: email
        description: A unique value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_user_partial_update
      parameters:
      - in: path
        name: email
        schema:
          type: string
          format: email
        description: A unique value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_user_destroy
      parameters:
      - in: path
        name: email
        schema:
          type: string
          format: email
        description: A unique value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Job:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          maxLength: 200
        text:
          type: string
        by:
          type: string
          format: email
        time:
          type: string
          format: date-time
        item_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - by
      - item_id
      - title
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedJob:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          maxLength: 200
        text:
          type: string
        by:
          type: string
          format: email
        time:
          type: string
          format: date-time
        item_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
    PatchedPoll:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        text:
          type: string
        by:
          type: string
          format: email
        time:
          type: string
          format: date-time
        item_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        descendants:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        options:
          type: array
          items:
            type: integer
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            format: int64
    PatchedStory:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          maxLength: 200
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        text:
          type: string
        by:
          type: string
          format: email
        time:
          type: string
          format: date-time
        descendants:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        item_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        comments:
          type: array
          items:
            type: integer
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            format: int64
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        created:
          type: string
          format: date-time
        karma:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        about:
          type: string
        verified:
          type: boolean
        avatar:
          type: string
          format: uri
          maxLength: 200
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: string
          format: email
          title: Email
          maxLength: 254
        email:
          type: string
          format: email
          readOnly: true
    Poll:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        text:
          type: string
        by:
          type: string
          format: email
        time:
          type: string
          format: date-time
        item_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        descendants:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        options:
          type: array
          items:
            type: integer
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            format: int64
      required:
      - by
      - item_id
      - options
      - title
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 255
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password1
      - password2
      - username
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Story:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          maxLength: 200
        score:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        text:
          type: string
        by:
          type: string
          format: email
        time:
          type: string
          format: date-time
        descendants:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        item_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        comments:
          type: array
          items:
            type: integer
            maximum: 9223372036854775807
            minimum: -9223372036854775808
            format: int64
      required:
      - by
      - comments
      - item_id
      - title
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    User:
      type: object
      properties:
        username:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        created:
          type: string
          format: date-time
        karma:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        about:
          type: string
        verified:
          type: boolean
        avatar:
          type: string
          format: uri
          maxLength: 200
      required:
      - username
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: string
          format: email
          title: Email
          maxLength: 254
        email:
          type: string
          format: email
          readOnly: true
      required:
      - email
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
